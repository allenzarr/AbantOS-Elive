Linux Kernel
-The Linux kernel is the piece of software that, roughly speaking, provides a layer between the hardware and the application programs running on a computer.  
	Major sub-components of the Linux kernel:
System Call interface- The system call interface is a thin layer that provides the means to perform function calls from client space into the kernel. The interface can be architecture dependent, even within the same processor family. The system call interface actually an interested function- call multiplexing and multiplexing service.
	Process management actually focused on the execution of processes. The the kernel, these are called threads and represent an individual virtualization of the data, stack, and CPU. The client space, the term process is typically used, though the linux implementation does not separate the two concepts. The kernel provides an application program interface(API) through the system call interface to create a new process (fork, exec, or portable operating system interface function), stop a process (kill, exit), and communicate and synchronize between them( signal, or POSIX mechanisms).
	Memory management: Another important resource that's managed by the kernel is memory. For efficiency, given the way that the hardware manages virtual memory, memory is managed in what are called pages (4KB in size for most architectures). Linux includes the means to manage the available memory, as well as the hardware mechanisms for physical and virtual mappings.
	Virtual file system: The virtual file system (VFS) is an interesting aspect of the Linux kernel because that provides a common interface abstraction for file systems. The VFS provides a switching layer between the SCI and the file systems supported by the kernel.
	Network Stack: The network stack, by design, follows a layered architecture modeled after the protocols themselves. Recall that the Internet Protocol (IP) is the core network layer protocol that sits below the transport protocol (most commonly the Transmission Control Protocol, or TCP). Above TCP is the sockets layer, which is invoked through the system call interface. The sockets layer is the standard API to the networking subsystem and provides a user interface to a variety of networking protocols. From raw frame access to IP protocol data units (PDUs) and up to TCP and the User Datagram Protocol (UDP), the sockets layer provides a standardized way to manage connections and move data between endpoints.
